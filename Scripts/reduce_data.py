import pandas

def reducedAluno_3EM_AG():
    df = pandas.read_csv('/home/elivelton/Downloads/microdados_saeb_2017/DADOS/TS_ALUNO_3EM_AG.csv', usecols=["ID_PROVA_BRASIL", "ID_REGIAO", "ID_UF", "ID_MUNICIPIO6", "ID_AREA", "ID_ESCOLA6", "ID_DEPENDENCIA_ADM", "ID_LOCALIZACAO", "ID_TURMA", "ID_TURNO", "ID_SERIE", "ID_ALUNO", "IN_SITUACAO_CENSO", "IN_PREENCHIMENTO_PROVA", "IN_PRESENCA_PROVA", "ID_CADERNO", "ID_BLOCO_1", "ID_BLOCO_2", "TX_RESP_BLOCO_1_LP2", "TX_RESP_BLOCO_2_LP2", "TX_RESP_BLOCO_1_MT2", "TX_RESP_BLOCO_2_MT2", "IN_PROFICIENCIA", "IN_PROVA_BRASIL", "ESTRATO_ANEB", "PESO_ALUNO_LP", "PESO_ALUNO_MT", "PROFICIENCIA_LP", "ERRO_PADRAO_LP", "PROFICIENCIA_LP_SAEB", "ERRO_PADRAO_LP_SAEB", "PROFICIENCIA_MT", "ERRO_PADRAO_MT", "PROFICIENCIA_MT_SAEB", "ERRO_PADRAO_MT_SAEB", "IN_PREENCHIMENTO_QUESTIONARIO"])
    df.to_csv('reducedAluno_3EM_AG.csv')


def reducedAluno_3EM_ESC():
    df = pandas.read_csv('/home/elivelton/Downloads/microdados_saeb_2017/DADOS/TS_ALUNO_3EM_ESC.csv', usecols=["ID_PROVA_BRASIL", "ID_REGIAO", "ID_UF", "ID_MUNICIPIO6", "ID_AREA", "ID_ESCOLA6", "ID_DEPENDENCIA_ADM", "ID_LOCALIZACAO", "ID_TURMA", "ID_TURNO", "ID_SERIE", "ID_ALUNO", "IN_SITUACAO_CENSO", "IN_PREENCHIMENTO_PROVA", "IN_PRESENCA_PROVA", "ID_CADERNO", "ID_BLOCO_1", "ID_BLOCO_2", "TX_RESP_BLOCO_1_LP2", "TX_RESP_BLOCO_2_LP2", "TX_RESP_BLOCO_1_MT2", "TX_RESP_BLOCO_2_MT2", "IN_PROFICIENCIA", "IN_PROVA_BRASIL", "ESTRATO_ANEB", "PESO_ALUNO_LP", "PESO_ALUNO_MT", "PROFICIENCIA_LP", "ERRO_PADRAO_LP", "PROFICIENCIA_LP_SAEB", "ERRO_PADRAO_LP_SAEB", "PROFICIENCIA_MT", "ERRO_PADRAO_MT", "PROFICIENCIA_MT_SAEB", "ERRO_PADRAO_MT_SAEB", "IN_PREENCHIMENTO_QUESTIONARIO"])
    df.to_csv('reducedAluno_3EM_ESC.csv')


def reducedAluno_5EF():
    df = pandas.read_csv('/home/elivelton/Downloads/microdados_saeb_2017/DADOS/TS_ALUNO_5EF.csv', usecols=["ID_PROVA_BRASIL", "ID_REGIAO", "ID_UF", "ID_MUNICIPIO6", "ID_AREA", "ID_ESCOLA6", "ID_DEPENDENCIA_ADM", "ID_LOCALIZACAO", "ID_TURMA", "ID_TURNO", "ID_SERIE", "ID_ALUNO", "IN_SITUACAO_CENSO", "IN_PREENCHIMENTO_PROVA", "IN_PRESENCA_PROVA", "ID_CADERNO", "ID_BLOCO_1", "ID_BLOCO_2", "TX_RESP_BLOCO_1_LP2", "TX_RESP_BLOCO_2_LP2", "TX_RESP_BLOCO_1_MT2", "TX_RESP_BLOCO_2_MT2", "IN_PROFICIENCIA", "IN_PROVA_BRASIL", "ESTRATO_ANEB", "PESO_ALUNO_LP", "PESO_ALUNO_MT", "PROFICIENCIA_LP", "ERRO_PADRAO_LP", "PROFICIENCIA_LP_SAEB", "ERRO_PADRAO_LP_SAEB", "PROFICIENCIA_MT", "ERRO_PADRAO_MT", "PROFICIENCIA_MT_SAEB", "ERRO_PADRAO_MT_SAEB", "IN_PREENCHIMENTO_QUESTIONARIO"])
    df.to_csv('reducedAluno_5EF.csv')


def reducedAluno_9EF():
    df = pandas.read_csv('/home/elivelton/Downloads/microdados_saeb_2017/DADOS/TS_ALUNO_9EF.csv', usecols=["ID_PROVA_BRASIL", "ID_REGIAO", "ID_UF", "ID_MUNICIPIO6", "ID_AREA", "ID_ESCOLA6", "ID_DEPENDENCIA_ADM", "ID_LOCALIZACAO", "ID_TURMA", "ID_TURNO", "ID_SERIE", "ID_ALUNO", "IN_SITUACAO_CENSO", "IN_PREENCHIMENTO_PROVA", "IN_PRESENCA_PROVA", "ID_CADERNO", "ID_BLOCO_1", "ID_BLOCO_2", "TX_RESP_BLOCO_1_LP2", "TX_RESP_BLOCO_2_LP2", "TX_RESP_BLOCO_1_MT2", "TX_RESP_BLOCO_2_MT2", "IN_PROFICIENCIA", "IN_PROVA_BRASIL", "ESTRATO_ANEB", "PESO_ALUNO_LP", "PESO_ALUNO_MT", "PROFICIENCIA_LP", "ERRO_PADRAO_LP", "PROFICIENCIA_LP_SAEB", "ERRO_PADRAO_LP_SAEB", "PROFICIENCIA_MT", "ERRO_PADRAO_MT", "PROFICIENCIA_MT_SAEB", "ERRO_PADRAO_MT_SAEB", "IN_PREENCHIMENTO_QUESTIONARIO"])
    df.to_csv('reducedAluno_9EF.csv')


def reducedDiretor():
    df = pandas.read_csv('/home/elivelton/Downloads/microdados_saeb_2017/DADOS/TS_DIRETOR.csv', usecols=["ID_PROVA_BRASIL", "ID_REGIAO", "ID_UF", "ID_MUNICIPIO6", "ID_AREA", "ID_ESCOLA6", "ID_DEPENDENCIA_ADM", "ID_LOCALIZACAO", "ID_TURMA", "ID_TURNO", "ID_SERIE", "ID_ALUNO", "IN_SITUACAO_CENSO", "IN_PREENCHIMENTO_PROVA", "IN_PRESENCA_PROVA", "ID_CADERNO", "ID_BLOCO_1", "ID_BLOCO_2", "TX_RESP_BLOCO_1_LP2", "TX_RESP_BLOCO_2_LP2", "TX_RESP_BLOCO_1_MT2", "TX_RESP_BLOCO_2_MT2", "IN_PROFICIENCIA", "IN_PROVA_BRASIL", "ESTRATO_ANEB", "PESO_ALUNO_LP", "PESO_ALUNO_MT", "PROFICIENCIA_LP", "ERRO_PADRAO_LP", "PROFICIENCIA_LP_SAEB", "ERRO_PADRAO_LP_SAEB", "PROFICIENCIA_MT", "ERRO_PADRAO_MT", "PROFICIENCIA_MT_SAEB", "ERRO_PADRAO_MT_SAEB", "IN_PREENCHIMENTO_QUESTIONARIO"])
    df.to_csv('reducedDiretor.csv')


def reducedEscola():
    df = pandas.read_csv('/home/elivelton/Downloads/microdados_saeb_2017/DADOS/TS_ESCOLA.csv', usecols=["ID_UF", "ID_MUNICIPIO", "ID_ESCOLA", "ID_DEPENDENCIA_ADM", "ID_LOCALIZACAO", "PC_FORMACAO_DOCENTE_INICIAL", "PC_FORMACAO_DOCENTE_FINAL", "PC_FORMACAO_DOCENTE_MEDIO", "NIVEL_SOCIO_ECONOMICO", "NU_MATRICULADOS_CENSO_5EF", "NU_PRESENTES_5EF", "TAXA_PARTICIPACAO_5EF", "Nivel_0_LP5", "Nivel_1_LP5", "Nivel_2_LP5", "Nivel_3_LP5", "Nivel_4_LP5", "Nivel_5_LP5", "Nivel_6_LP5", "Nivel_7_LP5", "Nivel_8_LP5", "Nivel_9_LP5", "Nivel_0_MT5", "Nivel_1_MT5", "Nivel_2_MT5", "Nivel_3_MT5", "Nivel_4_MT5", "Nivel_5_MT5", "Nivel_6_MT5", "Nivel_7_MT5", "Nivel_8_MT5", "Nivel_9_MT5", "Nivel_10_MT5", "NU_MATRICULADOS_CENSO_9EF", "NU_PRESENTES_9EF", "TAXA_PARTICIPACAO_9EF", "Nivel_0_LP9", "Nivel_1_LP9", "Nivel_2_LP9", "Nivel_3_LP9", "Nivel_4_LP9", "Nivel_5_LP9", "Nivel_6_LP9", "Nivel_7_LP9", "Nivel_8_LP9", "Nivel_0_MT9", "Nivel_1_MT9", "Nivel_2_MT9", "Nivel_3_MT9", "Nivel_4_MT9", "Nivel_5_MT9", "Nivel_6_MT9", "Nivel_7_MT9", "Nivel_8_MT9", "Nivel_9_MT9", "NU_MATRICULADOS_CENSO_3EM", "NU_PRESENTES_3EM", "TAXA_PARTICIPACAO_3EM", "Nivel_0_LP3", "Nivel_1_LP3", "Nivel_2_LP3", "Nivel_3_LP3", "Nivel_4_LP3", "Nivel_5_LP3", "Nivel_6_LP3", "Nivel_7_LP3", "Nivel_8_LP3", "Nivel_0_MT3", "Nivel_1_MT3", "Nivel_2_MT3", "Nivel_3_MT3", "Nivel_4_MT3", "Nivel_5_MT3", "Nivel_6_MT3", "Nivel_7_MT3", "Nivel_8_MT3", "Nivel_9_MT3", "Nivel_10_MT3", "MEDIA_5EF_LP", "MEDIA_5EF_MT", "MEDIA_9EF_LP", "MEDIA_9EF_MT", "MEDIA_3EM_LP", "MEDIA_3EM_MT", "IN_PREENCHIMENTO_QUESTIONARIO"])
    df.to_csv('reducedEscola.csv')


def reducedProfessor():
    df = pandas.read_csv('/home/elivelton/Downloads/microdados_saeb_2017/DADOS/TS_PROFESSOR.csv', usecols=["ID_PROVA_BRASIL", "ID_UF", "ID_MUNICIPIO", "ID_ESCOLA", "ID_DEPENDENCIA_ADM", "ID_LOCALIZACAO", "ID_TURMA", "CO_PROFESSOR", "ID_SERIE", "IN_PREENCHIMENTO_QUESTIONARIO"])
    df.to_csv('reducedProfessor.csv')


if __name__ == "__main__":
    reducedAluno_3EM_AG()
    reducedAluno_3EM_ESC()
    reducedAluno_5EF()
    reducedAluno_9EF()
    reducedDiretor()
    reducedEscola()
    reducedProfessor()